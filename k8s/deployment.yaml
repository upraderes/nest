apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-monitor
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-monitor-reader
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps", "extensions"]
  resources: ["deployments"]
  verbs: ["get", "list", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-monitor-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-monitor-reader
subjects:
- kind: ServiceAccount
  name: pod-monitor
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openshift-pod-monitor
  namespace: default
  labels:
    app: openshift-pod-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openshift-pod-monitor
  template:
    metadata:
      labels:
        app: openshift-pod-monitor
    spec:
      serviceAccountName: pod-monitor
      containers:
      - name: pod-monitor
        image: openshift-pod-monitor:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: OPENSHIFT_NAMESPACES
          value: "default,kube-system,openshift-console,openshift-monitoring"
        livenessProbe:
          httpGet:
            path: /api/openshift/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/openshift/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: openshift-pod-monitor
  namespace: default
  labels:
    app: openshift-pod-monitor
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: openshift-pod-monitor
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: openshift-pod-monitor
  namespace: default
  labels:
    app: openshift-pod-monitor
spec:
  to:
    kind: Service
    name: openshift-pod-monitor
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect